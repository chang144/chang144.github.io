import{_ as t,o,c as r,e as n}from"./app-d23692c0.js";const e={},s=n('<h1 id="_3-1http常见面试题" tabindex="-1"><a class="header-anchor" href="#_3-1http常见面试题" aria-hidden="true">#</a> 3.1HTTP常见面试题</h1><hr><p>接下来将从以下6个方面，逐渐学习和了解HTTP</p><ol><li>HTTP基本概念</li><li>Get与Post</li><li>HTTP特征</li><li>HTTP缓存</li><li>HTTPS与HTTP</li><li>HTTP/1.1、HTTP/2、HTTP/3演变</li></ol><p><img src="https://img-blog.csdnimg.cn/6b9bfd38d2684b3f9843ebabf8771212.png" alt="提纲"></p><h2 id="http基本概念" tabindex="-1"><a class="header-anchor" href="#http基本概念" aria-hidden="true">#</a> HTTP基本概念</h2><hr><h3 id="_1-http是什么" tabindex="-1"><a class="header-anchor" href="#_1-http是什么" aria-hidden="true">#</a> 1.<strong>HTTP是什么？</strong></h3><blockquote><p>HTTP是超文本传输协议，也就是<strong>HyperText Transfer Protocol</strong></p></blockquote><p>HTTP的名字【超文本传输协议】，可以拆成三个部分：</p><ul><li>超文本</li><li>传输</li><li>协议</li></ul><p><img src="https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/计算机网络/HTTP/3-HTTP三部分.png" alt="三个部分"></p><p>针对 HTTP <strong>协议</strong>，我们可以这么理解。</p><p><em>1. 「协议」</em></p><p>HTTP 是一个用在计算机世界里的<strong>协议</strong>。它使用计算机能够理解的语言确立了一种计算机之间交流通信的规范（<strong>两个以上的参与者</strong>），以及相关的各种控制和错误处理方式（<strong>行为约定和规范</strong>）。</p><p><em>2. 「传输」</em></p><p>HTTP 协议是一个<strong>双向协议</strong>。</p><p>针对<strong>传输</strong>，我们可以进一步理解了 HTTP。</p><p>HTTP 是一个在计算机世界里专门用来在<strong>两点之间传输数据</strong>的约定和规范。</p><p><em>3. 「超文本」</em></p><p>HTTP 传输的内容是「超文本」。</p><p>理解「超文本」，它就是<strong>超越了普通文本的文本</strong>，它是文字、图片、视频等的混合体，最关键有超链接，能从一个超文本跳转到另外一个超文本。</p><p><strong>HTTP 是一个在计算机世界里专门在「两点」之间「传输」文字、图片、音频、视频等「超文本」数据的「约定和规范」。</strong></p><blockquote><p>HTTP是用于从互联网服务器传输超文本到本地浏览器的协议，这个说法是错误的，因为HTTP也可以服务于【服务器&lt;---&gt;服务器】，所有采用<strong>两点之间</strong>的描述比较准确</p></blockquote><h3 id="_2-http常见的状态码" tabindex="-1"><a class="header-anchor" href="#_2-http常见的状态码" aria-hidden="true">#</a> 2.HTTP常见的状态码</h3><p><img src="https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/计算机网络/HTTP/6-五大类HTTP状态码.png" alt=" 五大类 HTTP 状态码 "></p><p><code>1xx</code> 类状态码属于<strong>提示信息</strong>，是协议处理中的一种中间状态，实际用到的比较少。</p><p><code>2xx</code> 类状态码表示服务器<strong>成功</strong>处理了客户端的请求，也是我们最愿意看到的状态。</p><ul><li>「<strong>200 OK</strong>」是最常见的成功状态码，表示一切正常。如果是非 <code>HEAD</code> 请求，服务器返回的响应头都会有 body 数据。</li><li>「<strong>204 No Content</strong>」也是常见的成功状态码，与 200 OK 基本相同，但响应头没有 body 数据。</li><li>「<strong>206 Partial Content</strong>」是应用于 HTTP 分块下载或断点续传，表示响应返回的 body 数据并不是资源的全部，而是其中的一部分，也是服务器处理成功的状态。</li></ul><p><code>3xx</code> 类状态码表示客户端请求的资源发生了变动，需要客户端用新的 URL 重新发送请求获取资源，也就是<strong>重定向</strong>。</p><ul><li>「<strong>301 Moved Permanently</strong>」表示永久重定向，说明请求的资源已经不存在了，需改用新的 URL 再次访问。</li><li>「<strong>302 Found</strong>」表示临时重定向，说明请求的资源还在，但暂时需要用另一个 URL 来访问。</li></ul><p>301 和 302 都会在响应头里使用字段 <code>Location</code>，指明后续要跳转的 URL，浏览器会自动重定向新的 URL。</p><ul><li>「<strong>304 Not Modified</strong>」不具有跳转的含义，表示资源未修改，重定向已存在的缓冲文件，也称缓存重定向，也就是告诉客户端可以继续使用缓存资源，用于缓存控制。</li></ul><p><code>4xx</code> 类状态码表示客户端发送的<strong>报文有误</strong>，服务器无法处理，也就是错误码的含义。</p><ul><li>「<strong>400 Bad Request</strong>」表示客户端请求的报文有错误，但只是个笼统的错误。</li><li>「<strong>403 Forbidden</strong>」表示服务器禁止访问资源，并不是客户端的请求出错。</li><li>「<strong>404 Not Found</strong>」表示请求的资源在服务器上不存在或未找到，所以无法提供给客户端。</li></ul><p><code>5xx</code> 类状态码表示客户端请求报文正确，但是<strong>服务器处理时内部发生了错误</strong>，属于服务器端的错误码。</p><ul><li>「<strong>500 Internal Server Error</strong>」与 400 类型，是个笼统通用的错误码，服务器发生了什么错误，我们并不知道。</li><li>「<strong>501 Not Implemented</strong>」表示客户端请求的功能还不支持，类似“即将开业，敬请期待”的意思。</li><li>「<strong>502 Bad Gateway</strong>」通常是服务器作为网关或代理时返回的错误码，表示服务器自身工作正常，访问后端服务器发生了错误。</li><li>「<strong>503 Service Unavailable</strong>」表示服务器当前很忙，暂时无法响应客户端，类似“网络服务正忙，请稍后重试”的意思。</li></ul><h3 id="_3-http-常见字段有哪些" tabindex="-1"><a class="header-anchor" href="#_3-http-常见字段有哪些" aria-hidden="true">#</a> 3.HTTP 常见字段有哪些？</h3>',38),i=[s];function l(g,a){return o(),r("div",null,i)}const d=t(e,[["render",l],["__file","01-http常见面试题.html.vue"]]);export{d as default};
