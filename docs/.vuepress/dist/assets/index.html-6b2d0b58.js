import{_ as e,o as c,c as d,e as o}from"./app-c89e49fa.js";const a={},t=o('<h1 id="计算机网络-tcp篇" tabindex="-1"><a class="header-anchor" href="#计算机网络-tcp篇" aria-hidden="true">#</a> 计算机网络 - tcp篇</h1><h2 id="tcp基础" tabindex="-1"><a class="header-anchor" href="#tcp基础" aria-hidden="true">#</a> TCP基础</h2><h3 id="tcp头格式" tabindex="-1"><a class="header-anchor" href="#tcp头格式" aria-hidden="true">#</a> TCP头格式</h3><p><img src="https://cdn.xiaolincoding.com//mysql/other/format,png-20230309230534096.png" alt="TCP"></p><ul><li><strong>序列号</strong>：在建立连接时，由计算机生成的随机数最为初始值，通过<strong>SYN</strong>包传给接收端主机，每发送一次数据，就累加一次该数据字节数的大小，<strong>用以解决网络包乱序问题</strong></li><li><strong>确认应答号</strong>：指下一次期望收到的数据的序列号，发送端收到这个确认应答以后可以确定这个序号以前的数据都被正常接收。用来解决丢包的问题</li><li><strong>控制位</strong>： <ul><li><code>ACK</code>:位为<code>1</code>时，确认应答的字段变为有效，TCP规定处理最初建立时的<code>SYN</code>包之外该为必须设置为<code>1</code></li><li><code>RST</code>:位为<code>1</code>时，表示TCP连接中出现异常必须强制断开连接</li><li><code>SYN</code>:位为<code>1</code>时，表示希望连接，并在其序列号的字段进行序列号初始值的设定</li><li><code>FIN</code>:位为<code>1</code>时，表示断开连接，当通信结束希望断开连接时，通信双方之间就可以相互交换<code>FIN</code>位为<code>1</code>的TCP段</li></ul></li></ul><h2 id="tcp建立连接" tabindex="-1"><a class="header-anchor" href="#tcp建立连接" aria-hidden="true">#</a> TCP建立连接</h2><h2 id="tcp断开连接" tabindex="-1"><a class="header-anchor" href="#tcp断开连接" aria-hidden="true">#</a> TCP断开连接</h2><h2 id="socket编程" tabindex="-1"><a class="header-anchor" href="#socket编程" aria-hidden="true">#</a> Socket编程</h2>',8),r=[t];function i(n,h){return c(),d("div",null,r)}const l=e(a,[["render",i],["__file","index.html.vue"]]);export{l as default};
